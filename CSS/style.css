/* #A4243B -- Red */
body {
  background: white;
}
/* NOTES TABLE */
#edit {
  background: #fff !important;
  box-shadow: none !important;
  padding: 0 !important;
  color: #a4243b !important;
  font-size: 1rem !important;
}
form.delete {
  display: inline;
}
#delete {
  background: #fff !important;
  box-shadow: none !important;
  padding: 0 !important;
  color: #a4243b !important;
  font-size: 1rem !important;
}

/* Row form */
.row-form > .inline {
  width: fit-content;
  margin: 0 auto !important;
  padding: 0 !important;
}
/* head-bar */
.head-bar > h2 {
  color: #a4243b;
  font-family: "Montserrat", sans-serif !important;
}
/* filter Grid */
.filter-grid {
  display: grid;
  grid-template-columns: 1fr 1fr 2fr 1fr;
}
.search-bar {
  border-radius: 45px !important;
}
.search-btn {
  background: #a4243b !important;
  box-shadow: none !important;
  color: #fff !important;
  height: fit-content;
}
::placeholder {
  /* Firefox, Chrome, Opera */
  color: #000 !important;
}
.search-day {
  font-size: 1em;
  line-height: 1.21428571em;
  padding: 0.67857143em 1em !important;
  border-radius: 45px !important;
  border: 1px solid rgba(34, 36, 38, 0.15) !important;
}
#between-arrow {
  margin-top: 1.2vh;
  color: #a4243b;
  font-size: 1.5rem;
}
/* SHOW RECORDS */
#show-records-table > thead > tr > th {
  font-size: 12px;
}
#show-records-table > tbody > tr > td {
  font-size: 12px;
}
@media only screen and (max-width: 600px) {
  .filter-grid {
    grid-template-columns: 1fr;
  }
  .ui.form:not(.unstackable) .fields:not(.unstackable) > .eight.wide.field,
  .ui.form:not(.unstackable) .fields:not(.unstackable) > .eleven.wide.field,
  .ui.form:not(.unstackable) .fields:not(.unstackable) > .fifteen.wide.field,
  .ui.form:not(.unstackable) .fields:not(.unstackable) > .five.wide.field,
  .ui.form:not(.unstackable) .fields:not(.unstackable) > .four.wide.field,
  .ui.form:not(.unstackable) .fields:not(.unstackable) > .fourteen.wide.field,
  .ui.form:not(.unstackable) .fields:not(.unstackable) > .nine.wide.field,
  .ui.form:not(.unstackable) .fields:not(.unstackable) > .seven.wide.field,
  .ui.form:not(.unstackable) .fields:not(.unstackable) > .six.wide.field,
  .ui.form:not(.unstackable) .fields:not(.unstackable) > .sixteen.wide.field,
  .ui.form:not(.unstackable) .fields:not(.unstackable) > .ten.wide.field,
  .ui.form:not(.unstackable) .fields:not(.unstackable) > .thirteen.wide.field,
  .ui.form:not(.unstackable) .fields:not(.unstackable) > .three.wide.field,
  .ui.form:not(.unstackable) .fields:not(.unstackable) > .twelve.wide.field,
  .ui.form:not(.unstackable) .fields:not(.unstackable) > .two.wide.field,
  .ui.form:not(.unstackable) .five.fields:not(.unstackable) > .field,
  .ui.form:not(.unstackable) .five.fields:not(.unstackable) > .fields,
  .ui.form:not(.unstackable) .four.fields:not(.unstackable) > .field,
  .ui.form:not(.unstackable) .four.fields:not(.unstackable) > .fields,
  .ui.form:not(.unstackable) .three.fields:not(.unstackable) > .field,
  .ui.form:not(.unstackable) .three.fields:not(.unstackable) > .fields,
  .ui.form:not(.unstackable) .two.fields:not(.unstackable) > .field,
  .ui.form:not(.unstackable) .two.fields:not(.unstackable) > .fields {
    width: 80% !important;
  }
}
